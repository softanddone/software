<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Scroll Trigger Fixed</title>
  <style>
    @font-face {
      src: url('https://res.cloudinary.com/losrodriguez/raw/upload/v1670565861/Hubot-Sans_xy9zmr.woff2') format('woff2 supports variations'),
           url('https://res.cloudinary.com/losrodriguez/raw/upload/v1670565861/Hubot-Sans_xy9zmr.woff2') format('woff2-variations');
      font-family: 'Hubot Sans';
      font-weight: 200 900;
      font-stretch: 75% 125%;
    }

    * {
      box-sizing: border-box;
      margin: 0;
      padding: 0;
    }
    body::before {
  
  background:
    linear-gradient(90deg, var(--line) 1px, transparent 1px var(--size)) 50% 50% / var(--size) var(--size),
    linear-gradient(var(--line) 1px, transparent 1px var(--size)) 50% 50% / var(--size) var(--size);
  mask: linear-gradient(-20deg, transparent 50%, white);
  z-index: 10;
}

    html, body {
      width: 100%;
      min-height: 100vh;
      background: #000;
      color: #fff;
      font-family: 'Hubot Sans', sans-serif;
      font-size: 18px;
      font-variation-settings: 'wght' 400, 'wdth' 100;
    }

    section {
      height: 100vh;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      position: relative;
      overflow: hidden;
      text-align: center;
    }

    img {
      transform: scale(2);
      position: absolute;
      width: 100%;
      height: 100%;
      object-fit: cover;
      z-index: -1;
      left: 0;
      top: 0;
    }

    .title {
      font-size: 8.5vw;
      text-transform: uppercase;
      position: relative;
      mix-blend-mode: difference;
    }

    .title::after {
      content: attr(data-text);
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      text-align: center;
      color: transparent;
      -webkit-text-stroke: 3px chocolate;
      z-index: -1;
    }

    .sub-title {
      font-size: 20px;
      color: yellow;
      background: black;
      mix-blend-mode: revert;
      padding: 0.1em 2em;
      margin: 0 auto;
    }

    a {
      text-transform: uppercase;
      font-size: 120%;
      color: yellow;
    }
  </style>
</head>
<body>

<main id="app">
  <section>
    <img src="https://picsum.photos/1920/1080?grayscale&random=1" alt="Placeholder">
    <h1 class="title stroke" data-text="Scroll Trigger">Scroll Trigger</h1>
    <p class="sub-title">Scroll-driven animations re-invented, by <a href="https://greensock.com/scrolltrigger/" target="_blank">Greensock</a></p>
  </section>
  <section>
    <img src="https://picsum.photos/1920/1080?grayscale&random=2" alt="Placeholder">
    <article>
      <h2 class="title stroke" data-text="Hubot Sans">Hubot Sans</h2>
      <p class="sub-title">Variable Font Open Source, by <a href="https://github.com/github/hubot-sans" target="_blank">Github</a>.</p>
    </article>
  </section>
  <section>
    <img src="https://picsum.photos/1920/1080?grayscale&random=4" alt="Placeholder">
    <article>
      <h2 class="title stroke" data-text="Lenis">Lenis</h2>
      <p class="sub-title">Smooth scroll, lightweight, by <a href="https://github.com/studio-freight/lenis" target="_blank">studio-freight</a>.</p>
    </article>
  </section>
  <section>
    <img src="https://picsum.photos/1920/1080?grayscale&random=3" alt="Placeholder">
    <article>
      <h2 class="title stroke" data-text="Picsum Photos">Picsum Photos</h2>
      <p class="sub-title">The Lorem Ipsum for photos, by <a href="https://picsum.photos/" target="_blank">David Marby & Nijiko Yonskai</a>.</p>
    </article>
  </section>
</main>

<script type="module">
  document.addEventListener("DOMContentLoaded", async () => {
    const [{ default: gsap }, { default: ScrollTrigger }, { default: Lenis }] = await Promise.all([
      import("https://cdn.skypack.dev/gsap@3.12.0"),
      import("https://cdn.skypack.dev/gsap@3.12.0/ScrollTrigger"),
      import("https://cdn.jsdelivr.net/npm/lenis@1.3.1")
    ]);

    gsap.registerPlugin(ScrollTrigger);

    const lenis = new Lenis({
      duration: 0.65,
      easing: t => Math.min(1, 1.001 - Math.pow(2, -10 * t)),
      smooth: true
    });

    // Smooth scroll handling
    lenis.on("scroll", ScrollTrigger.update);
    gsap.ticker.add(time => lenis.raf(time * 1000));
    gsap.ticker.lagSmoothing(0);

    // Animate titles on scroll velocity
    const object = { y: 0 };
    const ySetter = gsap.quickSetter(".title", "y", "px");
    const clamp = gsap.utils.clamp(-600, 600);

    ScrollTrigger.create({
      onUpdate: (self) => {
        const y = clamp(self.getVelocity() / -100);
        if (Math.abs(y) > Math.abs(object.y)) {
          object.y = y;
          gsap.to(object, {
            y: 0,
            duration: 1.2,
            ease: "back.out",
            overwrite: true,
            onUpdate: () => ySetter(object.y)
          });
        }
      }
    });

    // Parallax & Filter Animation per section
    document.querySelectorAll("section").forEach((section, index) => {
      const img = section.querySelector("img");

      gsap.to(img, {
        scrollTrigger: {
          trigger: section,
          start: index === 0 ? "top top" : "top bottom",
          end: "bottom center",
          scrub: true,
        },
        y: index === 0 ? "0px" : "-30vh",
        scale: index === 0 ? 2 : 1,
        filter: index === 0
          ? "contrast(2) brightness(0.35)"
          : "contrast(2) brightness(0.35)",
        ease: "none"
      });
    });
  });
</script>

</body>
</html>
